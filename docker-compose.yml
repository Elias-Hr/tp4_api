version: '3.8'

services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: moviesdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data:/data  # For CSV files
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  # Expose API port
    volumes:
      - ./backend:/app  # For development hot-reload
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=moviesdb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  data-importer:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy  # Attend que le service PostgreSQL soit prêt
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: moviesdb
    volumes:
      - ./data:/data  # Monte le répertoire contenant les fichiers CSV
      - ./postgres/init:/app/init  # Monte le répertoire contenant le script d'importation

volumes:
  postgres_data:
